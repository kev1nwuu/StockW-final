{"ast":null,"code":"var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\nfunction mkdirP(p, opts, f, made) {\n  if (typeof opts === 'function') {\n    f = opts;\n    opts = {};\n  } else if (!opts || typeof opts !== 'object') {\n    opts = {\n      mode: opts\n    };\n  }\n  var mode = opts.mode;\n  var xfs = opts.fs || fs;\n  if (mode === undefined) {\n    mode = _0777;\n  }\n  if (!made) made = null;\n  var cb = f || /* istanbul ignore next */function () {};\n  p = path.resolve(p);\n  xfs.mkdir(p, mode, function (er) {\n    if (!er) {\n      made = made || p;\n      return cb(null, made);\n    }\n    switch (er.code) {\n      case 'ENOENT':\n        /* istanbul ignore if */\n        if (path.dirname(p) === p) return cb(er);\n        mkdirP(path.dirname(p), opts, function (er, made) {\n          /* istanbul ignore if */\n          if (er) cb(er, made);else mkdirP(p, opts, cb, made);\n        });\n        break;\n\n      // In the case of any other error, just see if there's a dir\n      // there already.  If so, then hooray!  If not, then something\n      // is borked.\n      default:\n        xfs.stat(p, function (er2, stat) {\n          // if the stat fails, then that's super weird.\n          // let the original error be the failure reason.\n          if (er2 || !stat.isDirectory()) cb(er, made);else cb(null, made);\n        });\n        break;\n    }\n  });\n}\nmkdirP.sync = function sync(p, opts, made) {\n  if (!opts || typeof opts !== 'object') {\n    opts = {\n      mode: opts\n    };\n  }\n  var mode = opts.mode;\n  var xfs = opts.fs || fs;\n  if (mode === undefined) {\n    mode = _0777;\n  }\n  if (!made) made = null;\n  p = path.resolve(p);\n  try {\n    xfs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    switch (err0.code) {\n      case 'ENOENT':\n        made = sync(path.dirname(p), opts, made);\n        sync(p, opts, made);\n        break;\n\n      // In the case of any other error, just see if there's a dir\n      // there already.  If so, then hooray!  If not, then something\n      // is borked.\n      default:\n        var stat;\n        try {\n          stat = xfs.statSync(p);\n        } catch (err1) /* istanbul ignore next */{\n          throw err0;\n        }\n        /* istanbul ignore if */\n        if (!stat.isDirectory()) throw err0;\n        break;\n    }\n  }\n  return made;\n};","map":{"version":3,"names":["path","require","fs","_0777","parseInt","module","exports","mkdirP","mkdirp","p","opts","f","made","mode","xfs","undefined","cb","resolve","mkdir","er","code","dirname","stat","er2","isDirectory","sync","mkdirSync","err0","statSync","err1"],"sources":["C:/Users/98414/Desktop/stock_w_v/node_modules/mkdirp/index.js"],"sourcesContent":["var path = require('path');\r\nvar fs = require('fs');\r\nvar _0777 = parseInt('0777', 8);\r\n\r\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\r\n\r\nfunction mkdirP (p, opts, f, made) {\r\n    if (typeof opts === 'function') {\r\n        f = opts;\r\n        opts = {};\r\n    }\r\n    else if (!opts || typeof opts !== 'object') {\r\n        opts = { mode: opts };\r\n    }\r\n    \r\n    var mode = opts.mode;\r\n    var xfs = opts.fs || fs;\r\n    \r\n    if (mode === undefined) {\r\n        mode = _0777\r\n    }\r\n    if (!made) made = null;\r\n    \r\n    var cb = f || /* istanbul ignore next */ function () {};\r\n    p = path.resolve(p);\r\n    \r\n    xfs.mkdir(p, mode, function (er) {\r\n        if (!er) {\r\n            made = made || p;\r\n            return cb(null, made);\r\n        }\r\n        switch (er.code) {\r\n            case 'ENOENT':\r\n                /* istanbul ignore if */\r\n                if (path.dirname(p) === p) return cb(er);\r\n                mkdirP(path.dirname(p), opts, function (er, made) {\r\n                    /* istanbul ignore if */\r\n                    if (er) cb(er, made);\r\n                    else mkdirP(p, opts, cb, made);\r\n                });\r\n                break;\r\n\r\n            // In the case of any other error, just see if there's a dir\r\n            // there already.  If so, then hooray!  If not, then something\r\n            // is borked.\r\n            default:\r\n                xfs.stat(p, function (er2, stat) {\r\n                    // if the stat fails, then that's super weird.\r\n                    // let the original error be the failure reason.\r\n                    if (er2 || !stat.isDirectory()) cb(er, made)\r\n                    else cb(null, made);\r\n                });\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\nmkdirP.sync = function sync (p, opts, made) {\r\n    if (!opts || typeof opts !== 'object') {\r\n        opts = { mode: opts };\r\n    }\r\n    \r\n    var mode = opts.mode;\r\n    var xfs = opts.fs || fs;\r\n    \r\n    if (mode === undefined) {\r\n        mode = _0777\r\n    }\r\n    if (!made) made = null;\r\n\r\n    p = path.resolve(p);\r\n\r\n    try {\r\n        xfs.mkdirSync(p, mode);\r\n        made = made || p;\r\n    }\r\n    catch (err0) {\r\n        switch (err0.code) {\r\n            case 'ENOENT' :\r\n                made = sync(path.dirname(p), opts, made);\r\n                sync(p, opts, made);\r\n                break;\r\n\r\n            // In the case of any other error, just see if there's a dir\r\n            // there already.  If so, then hooray!  If not, then something\r\n            // is borked.\r\n            default:\r\n                var stat;\r\n                try {\r\n                    stat = xfs.statSync(p);\r\n                }\r\n                catch (err1) /* istanbul ignore next */ {\r\n                    throw err0;\r\n                }\r\n                /* istanbul ignore if */\r\n                if (!stat.isDirectory()) throw err0;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return made;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}